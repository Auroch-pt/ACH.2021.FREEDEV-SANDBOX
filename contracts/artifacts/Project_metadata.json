{
	"compiler": {
		"version": "0.8.7+commit.e28d00a7"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "_author",
						"type": "address"
					},
					{
						"internalType": "contract IssueFactory",
						"name": "_issueFactory",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"inputs": [],
				"name": "author",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "createIssue",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_numOfIssues",
						"type": "uint256"
					}
				],
				"name": "getActiveIssueList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "author",
								"type": "address"
							},
							{
								"internalType": "contract Project",
								"name": "project",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct Issue[]",
						"name": "_issueList",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_numOfIssues",
						"type": "uint256"
					}
				],
				"name": "getIssueList",
				"outputs": [
					{
						"components": [
							{
								"internalType": "uint256",
								"name": "id",
								"type": "uint256"
							},
							{
								"internalType": "address",
								"name": "author",
								"type": "address"
							},
							{
								"internalType": "contract Project",
								"name": "project",
								"type": "address"
							},
							{
								"internalType": "enum Status",
								"name": "status",
								"type": "uint8"
							}
						],
						"internalType": "struct Issue[]",
						"name": "_issueList",
						"type": "tuple[]"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "_allowed",
						"type": "address"
					}
				],
				"name": "givePermission",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "id",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"name": "issueMap",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "id",
						"type": "uint256"
					},
					{
						"internalType": "address",
						"name": "author",
						"type": "address"
					},
					{
						"internalType": "contract Project",
						"name": "project",
						"type": "address"
					},
					{
						"internalType": "enum Status",
						"name": "status",
						"type": "uint8"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "_issueId",
						"type": "uint256"
					},
					{
						"internalType": "enum Status",
						"name": "_status",
						"type": "uint8"
					}
				],
				"name": "updateIssueStatus",
				"outputs": [
					{
						"internalType": "bool",
						"name": "success",
						"type": "bool"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"kind": "dev",
			"methods": {},
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/Project.sol": "Project"
		},
		"evmVersion": "london",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/Issue.sol": {
			"keccak256": "0x26b9985cb770f486e4bad541819cba67146213aca00438b333fff1fbc4b4de89",
			"license": "MIT",
			"urls": [
				"bzz-raw://18c84dc6e22a09a7e2facc6899f545664e5eb347b90bbb8e47cec9fbbf39d6c8",
				"dweb:/ipfs/QmPEDcErp2xrYdpX6Z9ZuAo5oVioqz7Ra9CJxGMULqZHgZ"
			]
		},
		"contracts/Project.sol": {
			"keccak256": "0x77943bcb981f01e232df53a80054a6df725865b7247223d47b21c62d89efd948",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a33335c349f932c55352892286cf8da343f788d4e689a6ccc0834e9a4d65058",
				"dweb:/ipfs/QmYjLya6XmdPmfgQywkAKpbXrDLnLtcVmtvXMupbsjxgP3"
			]
		}
	},
	"version": 1
}